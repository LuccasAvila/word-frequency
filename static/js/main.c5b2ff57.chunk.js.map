{"version":3,"sources":["styles/global.js","components/Main/styles.js","context/TextContext.js","components/Stats/styles.js","components/Stats/StatsItem/styles.js","components/Stats/StatsItem/index.js","components/Stats/index.js","components/WordFrequency/styles.js","components/WordFrequency/index.js","components/Main/index.js","App.js","index.js"],"names":["createGlobalStyle","Container","styled","div","TextArea","textarea","TextContext","createContext","text","setText","countWords","countChars","wordFrequency","TextProvider","children","useState","split","filter","w","length","Provider","value","words","reduce","output","word","trim","toLowerCase","sortable","Object","keys","forEach","frequency","toFixed","push","sort","a","b","Count","p","Item","StatsItem","count","item","Stats","useContext","chars","timer","Title","List","ul","li","Loading","WordFrequency","wordInfo","setWordInfo","loading","setLoading","useEffect","clearTimeout","setTimeout","map","key","Main","onChange","e","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5b2ff57.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n    font-family: 'Muli', sans-serif;\n  }\n\n  html, body, #root {\n    background: #f7faff;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1140px;\n  width: 100%;\n  margin: 0 auto;\n  background: #fff;\n  box-shadow: 0 0 32px #ced9eb;\n  border-radius: 8px;\n  padding: 16px;\n  margin-top: 10vh;\n`;\n\nexport const TextArea = styled.textarea`\n  width: 100%;\n  resize: none;\n  height: 320px;\n  font-size: 1.125rem;\n  padding: 8px;\n  background: #f7faff;\n  border: 2px solid #f1f1f1;\n`;\n","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TextContext = createContext({\n  text: '',\n  setText: () => {},\n  countWords: () => {},\n  countChars: () => {},\n  wordFrequency: () => {},\n});\n\nconst TextProvider = ({ children }) => {\n  const [text, setText] = useState('');\n\n  const countWords = () => {\n    const words = text.split(/[\\s,.!?:]+/).filter(w => w !== '');\n    return words.length;\n  };\n\n  const countChars = () => text.length;\n\n  const wordFrequency = () => {\n    let words = text.split(/[\\s,.!?:]+/).filter(w => w !== '');\n    words = words.reduce((output, word) => {\n      const w = word.trim().toLowerCase();\n      return { ...output, ...{ [w]: output[w] ? output[w] + 1 : 1 } };\n    }, {});\n\n    const sortable = [];\n\n    Object.keys(words).forEach(word => {\n      const frequency = ((words[word] / countWords()) * 100).toFixed(2);\n      sortable.push([word, words[word], frequency]);\n    });\n\n    return sortable.sort((a, b) => {\n      return b[1] - a[1];\n    });\n  };\n\n  return (\n    <TextContext.Provider\n      value={{ text, setText, countWords, countChars, wordFrequency }}\n    >\n      {children}\n    </TextContext.Provider>\n  );\n};\n\nTextProvider.propTypes = { children: PropTypes.node.isRequired };\n\nexport default TextProvider;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  background: #f7faff;\n  border: 2px solid #f1f1f1;\n  margin-bottom: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  text-align: center;\n  padding: 16px;\n`;\n\nexport const Count = styled.p`\n  font-size: 2rem;\n  font-weight: bold;\n`;\n\nexport const Item = styled.p`\n  margin-top: 8px;\n  font-size: 1.5rem;\n  letter-spacing: 0.25rem;\n`;\n","import React from 'react';\nimport { Container, Count, Item } from './styles';\n\nconst StatsItem = ({ count, item }) => {\n  return (\n    <Container>\n      <Count>{count}</Count>\n      <Item>{item}</Item>\n    </Container>\n  );\n};\n\nexport default StatsItem;\n","import React, { useContext } from 'react';\nimport { Container } from './styles';\nimport StatsItem from './StatsItem';\nimport { TextContext } from '../../context/TextContext';\n\nconst Stats = () => {\n  const { countChars, countWords } = useContext(TextContext);\n  const chars = countChars();\n  const words = countWords();\n\n  return (\n    <Container>\n      <StatsItem count={chars} item=\"Characters\" />\n      <StatsItem count={words} item=\"Words\" />\n    </Container>\n  );\n};\n\nexport default Stats;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 16px;\n  padding: 16px;\n  background: #f7faff;\n  border: 2px solid #f1f1f1;\n`;\n\nexport const Title = styled.p`\n  font-size: 1.5rem;\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n  margin-top: 8px;\n`;\n\nexport const Item = styled.li``;\n\nexport const Loading = styled.div`\n  height: 128px;\n  background: #aaa;\n  animation: fading 1.5s infinite;\n\n  @keyframes fading {\n    0% {\n      opacity: 0.1;\n    }\n    50% {\n      opacity: 0.2;\n    }\n    100% {\n      opacity: 0.1;\n    }\n  }\n`;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Container, Title, List, Item, Loading } from './styles';\n\nimport { TextContext } from '../../context/TextContext';\n\nlet timer;\n\nconst WordFrequency = () => {\n  const { wordFrequency, text } = useContext(TextContext);\n  const [wordInfo, setWordInfo] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (timer) {\n      setLoading(true);\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      setWordInfo(wordFrequency);\n      setLoading(false);\n    }, 1000);\n  }, [text, wordFrequency]);\n\n  return (\n    wordInfo.length > 0 && (\n      <Container>\n        <Title>Word Frequency:</Title>\n        <List>\n          {loading ? (\n            <Loading />\n          ) : (\n            wordInfo.map(word => (\n              <Item key={word[0]}>\n                {`${word[1]} - ${word[0]} (${word[2]}%)`}\n              </Item>\n            ))\n          )}\n        </List>\n      </Container>\n    )\n  );\n};\n\nexport default WordFrequency;\n","import React, { useContext } from 'react';\nimport { Container, TextArea } from './styles';\nimport { TextContext } from '../../context/TextContext';\n\nimport Stats from '../Stats';\nimport WordFrequency from '../WordFrequency';\n\nconst Main = () => {\n  const { text, setText } = useContext(TextContext);\n\n  return (\n    <Container>\n      <Stats />\n      <TextArea\n        value={text}\n        onChange={e => setText(e.target.value)}\n        placeholder=\"Paste or write the text here...\"\n      />\n      <WordFrequency />\n    </Container>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport GlobalStyle from './styles/global';\nimport Main from './components/Main';\n\nimport TextProvider from './context/TextContext';\n\nfunction App() {\n  return (\n    <TextProvider>\n      <Main />\n      <GlobalStyle />\n    </TextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}